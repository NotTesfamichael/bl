services:
  # PostgreSQL Database
  postgres:
    image: postgres:16
    container_name: notes-blog-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: notes_blog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d notes_blog"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - notes-blog-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: notes-blog-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - notes-blog-network

  # Backend API
  backend:
    image: kiyadur/kiyadur:blog-backend
    container_name: notes-blog-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    env_file:
      - ./.env
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/notes_blog
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      - PORT=3001
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - BACKEND_URL=${BACKEND_URL:-http://localhost:3001}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3001/api/health"
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - notes-blog-network

  # Frontend Application
  frontend:
    image: kiyadur/kiyadur:blog-frontend
    container_name: notes-blog-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:3001/api
      - NEXT_PUBLIC_EXTERNAL_API_URL=http://localhost:3001/api
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000"
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - notes-blog-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  notes-blog-network:
    driver: bridge
